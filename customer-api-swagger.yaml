openapi: 3.0.2
info:
  version: 1.0.0
  title: Customer management API
  contact:
    name: API Test 
    email: adam.faulkner@anz.com
  license:
    name: ANZ License
  description: >-
    Test API to save and retrieve customers
servers:
  - url: TBD
    description: Customer API
paths:
  '/customers':
    summary: This path saves customer details into a DB
    post:
      summary: Save customer to DB
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer-model'
      responses:
        '201':
            description: Created successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
      tags:
        - Customer
  '/customers/{id}':        
    summary: This path gets customer from DB
    get:
      parameters:
        - in: path
          name: id
          description: Segment id to update a segment record.
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          $ref: '#/components/responses/CustomerResponseModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
      tags:
      - Customer
components:
  schemas:
    customer-model:
      title: Customer request
      type: object
      required:
        - firstName
        - lastName
        - address
        - employeeId
      properties:
        firstName:
          type: string
          description: First Name
          example: Adam
        lastName:
          type: string
          description: Last Name
          example: Faulkner
        employeeId:
          type: integer
          description: Employee Id.
          example: 32
        address:
          type: string
          description: Address
          example: 23 Albert Street  
    fault:
      properties:
        fault:
          type: object
          required:
            - code
            - httpStatus
            - message
            - serverDateTime
            - failures
          properties:
            code:
              type: string
              description: Error code
            httpStatus:
              type: integer
              description: The http status
            message:
              type: string
              description: Error message
            serverDateTime:
              type: string
              description: Server timestamp
            failures:
              items:
                type: array
  responses:
    CustomerResponseModel:
      description: Customer data from DB
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/customer-model'
          example: 
            firstName: Adam
            lastName: Faulkner
            employeeId: 32
            address: 23 Albert Street
    BadRequest:
      description: Any generic client errors (e.g. missing mandatory request parameters).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/fault'
          example:
              fault:
                code: badRequest
                httpStatus: 400
                message: You have supplied invalid request details
                serverDateTime: '2019-02-01T14:02:49.157+1300'
                failures: []
    InternalError:
      description: All internal errors including external connectivity errors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/fault'
          example:
              fault:
                code: internalError
                httpStatus: 500
                message: An internal error was encountered processing the request
                serverDateTime: '2019-02-01T14:02:49.157+1300'
                failures: []
